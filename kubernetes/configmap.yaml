apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: nginx
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main '$remote_addr - $ssl_client_s_dn - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"Client fingerprint" $ssl_client_fingerprint '
                    '"TLS" $ssl_protocol/$ssl_cipher $ssl_ciphers'
                    '"serial" $ssl_client_serial'
                    '"$http_user_agent" "$upstream_response_time"';

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
  proxy.conf: |
    # upstream node_basic {
    #     server                  node_basic:80;
    # }

    # server {
    #     listen                  80;
    #     location / {
    #         return              301 https://$host$request_uri;
    #     }
    # }

    server {
        listen                  443 ssl;

        ssl_certificate           /etc/ssl/server.crt;
        ssl_certificate_key       /etc/ssl/server.key;
        ssl_protocols             SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers               ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_client_certificate    /etc/nginx/client_certs/ca.crt;
        ssl_prefer_server_ciphers on;
        ssl_verify_client         on;
        ssl_verify_depth          10;

        location / {
            if ($ssl_client_verify != SUCCESS) { return 403; }

            proxy_set_header     Host $host;
            proxy_set_header     X-Real-IP $remote_addr;
            proxy_set_header     SSL_Client_Issuer $ssl_client_i_dn;
            proxy_set_header     SSL_Client $ssl_client_s_dn;
            proxy_set_header     SSL_Client_Verify $ssl_client_verify;

            proxy_pass           https://www.google.com.br;
        }
    }
  server.crt: |

  server.key: |

  ca.crt: |

